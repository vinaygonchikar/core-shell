name: CI-Build and Push to GCR

# manully trigger the job 

on:
  workflow_dispatch:
    inputs:
      image-tag:
        description: 'enter docker image version'     
        required: true
        default: '2.01'
        
# trigger the job on push below branches 

  #push:
      #branches: [develop, master, feature/*]
  
  
jobs:
 Build-Push-GCR:
 

#choose the OS in which you want to trigger the job 

    runs-on: ubuntu-latest
#Environment variables
    env:
      HOSTNAME: us.gcr.io
      PROJECT_ID: astute-cumulus-337508
      IMAGE_NAME: ${{ github.event.repository.name }}
      MAVEN_GOAL: clean install
      SLACK_CHANNEL: hello-see-log
      GITHUB_DNS: https://github.com
      URL_GITACTION: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
      GIT_branch: ${GITHUB_REF##*/}
    steps:

      - name: Build with Maven
        run: |
          echo ${{ github.html_url }}
          echo ${{ github.repository.html_url }}
#           echo ${{ env.URL_GITACTION }}
#           echo ${GITHUB_REF##*/}
#           echo ${{ github.actor }} 
#           echo ${{ github.action_path }}
#           echo ${{ github.action_ref }}
#           echo ${{ github.action_repository	}}
#           echo ${{ github.actor }}
#           echo ${{ github.api_url }}
#           echo ${{ github.base_ref }}
#           echo ${{ github.env }}
#           echo ${{ github.event }}
#           echo ${{ github.event_name }}
#           echo ${{ github.event_path }}
#           echo ${{ github.graphql_url }}
#           echo ${{ github.head_ref }}
#           echo ${{ github.job }}
#           echo ${{ github.ref }}
#           echo ${{ github.ref_name }}
#           echo ${{ github.ref_protected }}
#           echo ${{ github.ref_type }}
#           echo ${{ github.path	 }}
#           echo ${{ github.repository }}
#           echo ${{ github.repository_owner }}
#           echo ${{ github.repositoryUrl }}
#           echo ${{ github.retention_days }}
#           echo ${{ github.run_id }}
#           echo ${{ github.run_number }}
#           echo ${{ github.run_attempt }}
#           echo ${{ github.server_url }}
#           echo ${{ github.sha }}
#           echo ${{ github.token }}
#           echo ${{ github.workflow }}
#           echo ${{ github.workspace }}
          
#       - name: Dump GitHub context
#         id: github_context_step
#         run: echo '${{ toJSON(github) }}'    ${{ fromJSON(env.continue) }}
#       - name: Dump job context
#         run: echo '${{ toJSON(job) }}'
#       - name: Dump steps context
#         run: echo '${{ toJSON(steps) }}'
#       - name: Dump runner context
#         run: echo '${{ toJSON(runner) }}'
#       - name: Dump strategy context
#         run: echo '${{ toJSON(strategy) }}'
#       - name: Dump matrix context
#         run: echo '${{ toJSON(matrix) }}'



# # checkout to barnch u manually trigger or to the branch with latest commit
#       - name: Post to a Slack channel
#         if: always()
#         uses: slackapi/slack-github-action@v1.18.0
#         with:
#           channel-id: 'hello-see-log'
#           slack-message:  ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.event.repository.name }} has started | check this out | ${{ github.URL_GITACTION }}
#         env:
#           SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

          
          
# # checkout to barnch u manually trigger or to the branch with latest commit          
          
#       - uses: vinaygonchikar/checkout@v2
      
      
# # install java in VM
      
#       - name: Set up JDK 11
#         uses: vinaygonchikar/setup-java@v2
#         with:
#           java-version: '11'
#           distribution: 'adopt'
          
# # Build with Maven
  
#       #- name: Build with Maven
#         #run: mvn $MAVEN_GOAL
        
# #Authentication to GCR
        
#       #- uses: vinaygonchikar/setup-gcloud@master
#         #with:
#           #service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#           #project_id: ${{ env.PROJECT_ID }}
#           #export_default_credentials: true
          
# # change path & build docker image
          
#       #- name: build docker image
#         #run: |
#           #cd ./account-service
#           #docker build -t $HOSTNAME/$PROJECT_ID/$IMAGE_NAME:${{ github.event.inputs.image-tag }} .
        
# #configure docker use Google cloud while pushing image


#       #- name: Configure Docker Client
#         #run: |-
#           #gcloud auth configure-docker --quiet
#           #gcloud auth configure-docker $env.PROJECT_ID --quiet

          
# # show all docker images in vm
          
#       - name: docker image
#         run: docker images
        
#       - name: docker image
#         run: |
#           echo "$GITHUB_ACTION"	
#           #"$GITHUB_ACTION_PATH"
#           #"$GITHUB_ACTION_REPOSITORY"
#           echo "$GITHUB_ACTIONS"
#           echo "$GITHUB_ACTOR"
#           echo "$GITHUB_API_URL"
#           echo "$GITHUB_BASE_REF"
#           echo "$GITHUB_ENV"	
#           echo "$GITHUB_EVENT_NAME"	
#           echo "$GITHUB_EVENT_PATH"	
#           echo "$GITHUB_GRAPHQL_URL"	
#           echo "$GITHUB_HEAD_REF"
#           echo "$GITHUB_JOB"
#           echo "$GITHUB_PATH"	
#           echo "$GITHUB_REF_NAME"	
#           echo "$GITHUB_REF_PROTECTED"	
#           echo "$GITHUB_REF_TYPE"	
#           echo "$GITHUB_REPOSITORY"	
#           echo "$GITHUB_REPOSITORY_OWNER"
#           echo "$GITHUB_RETENTION_DAYS"
#           echo "$GITHUB_RUN_ATTEMPT"	
#           echo "$GITHUB_RUN_ID"	
#           echo "$GITHUB_RUN_NUMBER"	
#           echo "$GITHUB_SHA"	
#           echo "$GITHUB_WORKFLOW"	
#           echo "$GITHUB_WORKSPACE"	
#           echo "$RUNNER_ARCH"	
#           echo "$RUNNER_NAME"	
#           echo "$RUNNER_OS"	
#           echo "$RUNNER_TEMP"	
#           echo "$RUNNER_TOOL_CACHE"
        
# # push  docker image
        
#       #- name: Docker Image to Container Registry (GCR)
#         #run: docker push $HOSTNAME/$PROJECT_ID/$IMAGE_NAME:${{ github.event.inputs.image-tag }}
        
#       - name: Post to a Slack channel
#         if: always()
#         uses: slackapi/slack-github-action@v1.18.0
#         with:
#           # Slack channel id, channel name, or user id to post message.
#           # See also: https://api.slack.com/methods/chat.postMessage#channels
#           channel-id: 'hello-see-log'
#           # For posting a simple plain text message
#           slack-message: "Build-Push-GCR job in ${{ github.event.repository.name }} picked $GITHUB_REF_NAME branch : ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
#         env:
#           SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          

        

         
         

        
 

