name: Pre-prod-CI 

# manully trigger the job 

on:
  workflow_dispatch:
    inputs:
      image-tag:
        description: 'enter image tag'     
        required: true
        default: 'v2.0.1'
        
# trigger the job on push for all branches except pre-prod 

  push:
    branches: 
      - 'feature**'
  
  
jobs:
 Build-Push-To-GCR:
    if: github.ref_name != 'master'
    if: github.ref_type == 'branch'
    runs-on: ubuntu-latest
#Environment variables
    env:
      HOSTNAME: us.gcr.io 
      PROJECT_ID: io1-homeservices-dev
      IMAGE_NAME: pro-xtra-ingestion-pub-sub #${{ github.event.repository.name }} 
      MAVEN_GOAL: clean install
      SLACK_CHANNEL: hello-see-log
      URL_GITACTION: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
      GIT_branch: ${GITHUB_REF##*/}
    steps:
    

# # post slack message that job is triggered 

      # - name: Post to a Slack channel
      #   if: always()
      #   uses: slackapi/slack-github-action@v1.18.0
      #   with:
      #     channel-id: ${{ env.SLACK_CHANNEL }}
      #     slack-message:  ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.event.repository.name }} has started | check this out | ${{ github.URL_GITACTION }}
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

# checkout to barnch u manually trigger or to the branch with latest commit

      - uses: actions/checkout@v2

      - name: Set the GITHUB_ENVvalue
        run: |
          echo "IMAGE_NAME=$(cat ./pom.xml | grep "artifactId" | cut -d'>' -f2 | cut -d'<' -f1 | head -1)" >> $GITHUB_ENV 
          echo "TAG_NAME=$(cat ./pom.xml | grep "version" | cut -d'>' -f2 | cut -d'<' -f1 | head -1)" >> $GITHUB_ENV
          echo "${{ env.IMAGE_NAME }}" 
          echo "${{ env.TAG_NAME }}"    
# install java in VM
      
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Build with Maven
        run: |
          echo ${{ github.ref_name }}
          # echo "${{ github.run_id }}"
          # echo "{{ github.run_number }}"
          # echo "$GITHUB_RUN_NUMBER"echo "${{ github.server_url }}/${{ github.repository }}"
          # echo ${{ env.URL_GITACTION }}
          # echo ${GITHUB_REF##*/}}

          # echo ${{ github.action_path }}
          # echo ${{ github.action_ref }}
          # echo ${{ github.action_repository	}}
          # echo ${{ github.actor }}
          # echo ${{ github.api_url }}
          # echo ${{ github.base_ref }}
          # echo ${{ github.env }}
          # echo ${{ github.event }}
          # echo ${{ github.event_name }}
          # echo ${{ github.event_path }}
          # echo ${{ github.graphql_url }}
          # echo ${{ github.head_ref }}
          # echo ${{ github.job }}
          # echo ${{ github.ref }}
          # ------
          # echo ${{ github.ref_protected }}
          # echo ${{ github.ref_type }}
          # echo ${{ github.path	 }}
          # echo ${{ github.repository }}
          # echo ${{ github.repository_owner }}
          # echo ${{ github.repositoryUrl }}
          # echo ${{ github.retention_days }}
          # echo ${{ github.run_id }}
          # echo ${{ github.run_number }}
          # echo ${{ github.run_attempt }}
          # echo ${{ github.server_url }}
          # echo ${{ github.sha }}
          # echo ${{ github.token }}
          # echo ${{ github.workflow }}
          # echo ${{ github.workspace }}    


# Build with Maven

  
#       - name: Build with Maven
#         run: mvn $MAVEN_GOAL
        
# #Authentication to GCR
        
#       - uses: google-github-actions/setup-gcloud@master
#         with:
#           service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#           project_id: ${{ env.PROJECT_ID }}
#           export_default_credentials: true
          
# # change path & build docker image
          
#       - name: build docker image
#         run: |
#           docker build -t $HOSTNAME/$PROJECT_ID/$IMAGE_NAME:${{ github.event.inputs.image-tag }} .
        
# #configure docker use Google cloud while pushing image


#       - name: Configure Docker Client
#         run: |-
#           gcloud auth configure-docker --quiet
#           gcloud auth configure-docker $env.PROJECT_ID --quiet
          
# # show all docker images in vm
          
#       - name: docker image
#         run: docker images
        
# # push  docker image
        
#       - name: Docker Image to Container Registry (GCR)
#         run: docker push $HOSTNAME/$PROJECT_ID/$IMAGE_NAME:${{ github.event.inputs.image-tag }}


# # post slack message that job status

#       - name: Post to a Slack channel
#         if: always()
#         uses: slackapi/slack-github-action@v1.18.0
#         with:
#           # Slack channel id, channel name, or user id to post message.
#           # See also: https://api.slack.com/methods/chat.postMessage#channels
#           channel-id: 'hello-see-log'
#           # For posting a simple plain text message
#           slack-message: "Build-Push-GCR job in ${{ github.event.repository.name }} picked $GITHUB_REF_NAME branch : ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
#         env:
#           SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          
